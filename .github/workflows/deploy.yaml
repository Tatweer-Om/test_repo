name: Deploy to AWS ECR & EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ AKIA6JKEYEKNXL5D7E4T }}
          aws-secret-access-key: ${{ bLz/toy5HXkH6F7hDCa1mZNnyO9CcWgw4aOBus0 }}
          aws-region: us-east-1

      - name: Login to AWS ECR
  run: |
    aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 982081086107.dkr.ecr.us-east-1.amazonaws.com

- name: Build and Tag Docker Image
  run: |
    docker build -t my-html-app .
    docker tag my-html-app:latest 982081086107.dkr.ecr.us-east-1.amazonaws.com/myapp/first-repo:latest

- name: Push Docker Image to AWS ECR
  run: |
    docker push 982081086107.dkr.ecr.us-east-1.amazonaws.com/myapp/first-repo:latest


  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest    
    steps:
      - name: SSH into EC2 and Deploy
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ubuntu
          ECR_REPO: 123456789012.dkr.ecr.your-region.amazonaws.com/my-html-app:latest
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST << EOF
            echo "ðŸš€ Starting Deployment on EC2..."

            # Install Docker if not installed
            if ! command -v docker &> /dev/null; then
              sudo apt update -y
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker \$USER
            fi

            # Login to ECR
            aws ecr get-login-password --region your-region | docker login --username AWS --password-stdin 123456789012.dkr.ecr.your-region.amazonaws.com

            # Pull latest Docker image from ECR
            docker stop my-html-container || true
            docker rm my-html-container || true
            docker pull $ECR_REPO

            # Run new container
            docker run -d -p 80:80 --name my-html-container $ECR_REPO

            echo "ðŸš€ Deployment completed successfully!"
          EOF
